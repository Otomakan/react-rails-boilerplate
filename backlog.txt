used mongoimport --db seekafrique_development --collection countries --file countries.csv --type csv  --headerline
 to get countries by name

Figured out the general db structure, should be fast from now on. 

Found list of universities, industries, majors

EKPEMI TO DO: List of degree titles, regions, main cities

In education I create two fields for instituion institution, and tempeducation. One is inst_id, the other one allows a string. IN the react this means that the Post will have to be different depending on list choose or not.

Put a userInfo in userprofile

Must think about how to validate presence, and for instituoon must have at least one field validated between string and inst list

to query embedded objects:  User.find_by('userProfile.personalInfo.firstName':'jack')

for the personal info forms pleas check that you have some some server query to tell what has been done, so users don't send the same stuff twice. 

make the errors more constitant accross the app, for handling in the react side but also, the format that is sent, probably better to convert the hashes into JSO format before sending them out. 

Make a dispatch when submit new first name , so that on change it will update the Welcome {name } component

In the PUSER controller fix the error hangling of createpinfo.

Check the token validation error handling got tis :
10:04:10 rails.1     | Completed 500 Internal Server Error in 6ms
10:04:10 rails.1     | 
10:04:10 rails.1     | 
10:04:10 rails.1     |   
10:04:10 rails.1     | NoMethodError (undefined method `errors' for nil:NilClass):
10:04:10 rails.1     |   
10:04:10 rails.1     | app/controllers/auth_controller.rb:25:in `checktoken'
10:04:16 rails.1     | Started POST "/authenticate" for ::1 at 2018-08-13 10:04:16 -0500

Think about ways to control work history so you don't get ouble entries, the problem is that I don't know what I can use as controls, appart from checking for overlapping dates and 

Change the date pickers in Edu and WorkH

when looking at the profile, if an element is missing create a "not available" notice

Create a 404 page for loggedinroute

At the buld Profile make an api call, and if we see that the profile was already built, mak a little warning message, or even redirect

Do some research of elastic search v normal search provided with Mongoid

Implement a onPress enter event for login or other submitting stuff


Check for redundant data in different redux reducers

Change the personal info in build profile so that it works directly on data in the redux store

dont forget to put the embedded in relations to update everything!!!

don't forget the cors setup is in initializers/cors.rb

Reorganize the container folder according to the routes, especially creating a UserLoggedOut folder

IN the auth reducer add a 'userType'

Created a new API for company sign in.

Have some labels for industries and stuff like that

Might want to reorganize the actions and reducers maybe create a user and a company profile

maybe but the userActions and signup together

Maybe have a little cover letter field 

For the menus and stuff make sure to rewrap the elementsmin the <Link> tags which are no inside, so bit wonky

Mongoid::Errors::MixedRelations (
message:
  Referencing a(n) UserProfile document from the JobPost document via a relational association is not allowed since the UserProfile is embedded.
  So we have to majke a new has_many reference with the User id

 For the application user models think a little bit deeper

 There needsd to be a bit of reorganizing in the controllers. For instance maybe create a CompanyAPICallController so that all the Compay api calls go through the same check filtes and we don't ave to rewrite same code everytime